"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/components/video-player.tsx":
/*!*****************************************!*\
  !*** ./src/components/video-player.tsx ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VideoPlayer: () => (/* binding */ VideoPlayer)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.1.0_@playwright+test@1.54.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.1.0_@playwright+test@1.54.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var hls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hls.js */ \"(app-pages-browser)/../../node_modules/.pnpm/hls.js@1.6.10/node_modules/hls.js/dist/hls.mjs\");\n/* harmony import */ var _store_alerts_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/store/alerts-store */ \"(app-pages-browser)/./src/store/alerts-store.ts\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./src/lib/utils.ts\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/../../node_modules/.pnpm/framer-motion@11.18.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ VideoPlayer auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction VideoPlayer(param) {\n    let { src, className, autoPlay = true, muted = true, controls = true, silent = false, stabilizePlayback = false } = param;\n    _s();\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const hlsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const intervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { alerts } = (0,_store_alerts_store__WEBPACK_IMPORTED_MODULE_3__.useAlertsStore)();\n    // Track if we've already set up HLS to prevent multiple setups\n    const setupCompleteRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    // Add a timestamp reference to track when we last received data\n    const lastActivityRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(Date.now());\n    // Function to reload the stream if it's stale\n    const checkStreamHealth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"VideoPlayer.useCallback[checkStreamHealth]\": ()=>{\n            const now = Date.now();\n            const video = videoRef.current;\n            const hls = hlsRef.current;\n            // If no activity for more than 30 seconds, reload the stream\n            if (now - lastActivityRef.current > 30000 && video && hls) {\n                console.log(\"Stream appears stale, reloading...\");\n                // Try to recover by reloading the stream\n                try {\n                    // First try a simple restart\n                    hls.stopLoad();\n                    hls.startLoad();\n                    // If we have a position, seek there to force refresh\n                    if (video.duration) {\n                        video.currentTime = video.duration;\n                    }\n                    // Reset our activity timestamp\n                    lastActivityRef.current = now;\n                } catch (e) {\n                    console.error(\"Error reloading stale stream:\", e);\n                    // If simple reload fails, do a complete reset\n                    setupHls();\n                }\n            }\n        }\n    }[\"VideoPlayer.useCallback[checkStreamHealth]\"], []);\n    // Handle browser visibility changes (tab switching, sleep, etc.)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"VideoPlayer.useEffect\": ()=>{\n            const handleVisibilityChange = {\n                \"VideoPlayer.useEffect.handleVisibilityChange\": ()=>{\n                    if (document.visibilityState === 'visible') {\n                        console.log('Tab became visible, checking stream health...');\n                        checkStreamHealth();\n                    }\n                }\n            }[\"VideoPlayer.useEffect.handleVisibilityChange\"];\n            document.addEventListener('visibilitychange', handleVisibilityChange);\n            return ({\n                \"VideoPlayer.useEffect\": ()=>{\n                    document.removeEventListener('visibilitychange', handleVisibilityChange);\n                }\n            })[\"VideoPlayer.useEffect\"];\n        }\n    }[\"VideoPlayer.useEffect\"], [\n        checkStreamHealth\n    ]);\n    // Setup periodic health check for the stream\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"VideoPlayer.useEffect\": ()=>{\n            // Check the stream health every 10 seconds\n            intervalRef.current = setInterval(checkStreamHealth, 10000);\n            return ({\n                \"VideoPlayer.useEffect\": ()=>{\n                    if (intervalRef.current) {\n                        clearInterval(intervalRef.current);\n                    }\n                }\n            })[\"VideoPlayer.useEffect\"];\n        }\n    }[\"VideoPlayer.useEffect\"], [\n        checkStreamHealth\n    ]);\n    // Define setupHls function at component level so we can reuse it\n    const updateActivity = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"VideoPlayer.useCallback[updateActivity]\": ()=>{\n            lastActivityRef.current = Date.now();\n        }\n    }[\"VideoPlayer.useCallback[updateActivity]\"], []);\n    // Fix the AbortError and improve latency\n    const setupHls = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"VideoPlayer.useCallback[setupHls]\": ()=>{\n            if (!videoRef.current || !src || setupCompleteRef.current) return;\n            if (hls_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isSupported()) {\n                if (hlsRef.current) {\n                    hlsRef.current.destroy();\n                }\n                // Create extreme low-latency HLS configuration\n                const hls = new hls_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n                    enableWorker: true,\n                    lowLatencyMode: true,\n                    liveSyncDuration: 0.2,\n                    liveMaxLatencyDuration: 0.4,\n                    maxBufferLength: 0.5,\n                    maxBufferSize: 2 * 1000 * 1000,\n                    debug: false,\n                    xhrSetup: {\n                        \"VideoPlayer.useCallback[setupHls]\": function(xhr) {\n                            xhr.setRequestHeader('Cache-Control', 'no-cache');\n                        }\n                    }[\"VideoPlayer.useCallback[setupHls]\"]\n                });\n                // Add timestamp to prevent caching\n                const urlWithTimestamp = \"\".concat(src, \"?_t=\").concat(Date.now());\n                // Set up error handling\n                hls.on(hls_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Events.ERROR, {\n                    \"VideoPlayer.useCallback[setupHls]\": (event, data)=>{\n                        if (!silent && data && Object.keys(data).length > 0) {\n                            console.error('HLS player error:', JSON.stringify(data));\n                        }\n                        if (data && data.fatal) {\n                            switch(data.type){\n                                case hls_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ErrorTypes.NETWORK_ERROR:\n                                    console.log('Fatal network error encountered, trying to recover...');\n                                    setTimeout({\n                                        \"VideoPlayer.useCallback[setupHls]\": ()=>{\n                                            hls.loadSource(urlWithTimestamp);\n                                            hls.startLoad();\n                                        }\n                                    }[\"VideoPlayer.useCallback[setupHls]\"], 500);\n                                    break;\n                                case hls_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ErrorTypes.MEDIA_ERROR:\n                                    console.log('Fatal media error encountered, trying to recover...');\n                                    setTimeout({\n                                        \"VideoPlayer.useCallback[setupHls]\": ()=>{\n                                            hls.recoverMediaError();\n                                        }\n                                    }[\"VideoPlayer.useCallback[setupHls]\"], 500);\n                                    break;\n                                default:\n                                    console.error('Fatal error, cannot recover');\n                                    setError('Stream playback error. Try refreshing the page.');\n                                    break;\n                            }\n                        }\n                    }\n                }[\"VideoPlayer.useCallback[setupHls]\"]);\n                hls.on(hls_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Events.MANIFEST_PARSED, {\n                    \"VideoPlayer.useCallback[setupHls]\": ()=>{\n                        setIsLoading(false);\n                        setError(null);\n                        if (videoRef.current) {\n                            // Configure video for low latency\n                            videoRef.current.muted = true;\n                            videoRef.current.autoplay = true;\n                            videoRef.current.playsInline = true;\n                            // Play faster to reduce latency\n                            videoRef.current.playbackRate = 1.1;\n                            // Handle play interruption errors\n                            const safePlay = {\n                                \"VideoPlayer.useCallback[setupHls].safePlay\": ()=>{\n                                    if (!videoRef.current) return;\n                                    videoRef.current.play().catch({\n                                        \"VideoPlayer.useCallback[setupHls].safePlay\": (e)=>{\n                                            if (e.name === 'AbortError') {\n                                                // Play was interrupted, try again after a short delay\n                                                setTimeout(safePlay, 100);\n                                            } else {\n                                                console.error('Autoplay failed:', e);\n                                            }\n                                        }\n                                    }[\"VideoPlayer.useCallback[setupHls].safePlay\"]);\n                                }\n                            }[\"VideoPlayer.useCallback[setupHls].safePlay\"];\n                            // Start playback safely\n                            safePlay();\n                            // Seek to live edge periodically\n                            const seekToLiveEdge = {\n                                \"VideoPlayer.useCallback[setupHls].seekToLiveEdge\": ()=>{\n                                    if (hls.liveSyncPosition && videoRef.current) {\n                                        videoRef.current.currentTime = hls.liveSyncPosition;\n                                    }\n                                }\n                            }[\"VideoPlayer.useCallback[setupHls].seekToLiveEdge\"];\n                            const liveEdgeInterval = setInterval(seekToLiveEdge, 1000);\n                            liveEdgeIntervalRef.current = liveEdgeInterval;\n                        }\n                        updateActivity();\n                    }\n                }[\"VideoPlayer.useCallback[setupHls]\"]);\n                hls.loadSource(urlWithTimestamp);\n                hls.attachMedia(videoRef.current);\n                hlsRef.current = hls;\n                setupCompleteRef.current = true;\n            } else if (videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n                videoRef.current.src = \"\".concat(src, \"?_t=\").concat(Date.now());\n                videoRef.current.addEventListener('loadedmetadata', {\n                    \"VideoPlayer.useCallback[setupHls]\": ()=>{\n                        var _videoRef_current;\n                        (_videoRef_current = videoRef.current) === null || _videoRef_current === void 0 ? void 0 : _videoRef_current.play().catch({\n                            \"VideoPlayer.useCallback[setupHls]\": (e)=>{\n                                console.error('Autoplay failed:', e);\n                            }\n                        }[\"VideoPlayer.useCallback[setupHls]\"]);\n                        updateActivity();\n                    }\n                }[\"VideoPlayer.useCallback[setupHls]\"]);\n                setupCompleteRef.current = true;\n            }\n        }\n    }[\"VideoPlayer.useCallback[setupHls]\"], [\n        src,\n        silent,\n        updateActivity\n    ]);\n    // Add this at the component level, outside the setupHls function\n    const liveEdgeIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Handle HLS video loading\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"VideoPlayer.useEffect\": ()=>{\n            const video = videoRef.current;\n            if (!video) return;\n            // If we're stabilizing playback and already have an HLS instance with the same source, don't recreate\n            if (stabilizePlayback && hlsRef.current && setupCompleteRef.current) {\n                console.log(\"Stabilizing playback: reusing existing HLS instance\");\n                return;\n            }\n            setupHls();\n            return ({\n                \"VideoPlayer.useEffect\": ()=>{\n                    if (hlsRef.current) {\n                        hlsRef.current.destroy();\n                        hlsRef.current = null;\n                    }\n                    if (intervalRef.current) {\n                        clearInterval(intervalRef.current);\n                        intervalRef.current = null;\n                    }\n                }\n            })[\"VideoPlayer.useEffect\"];\n        }\n    }[\"VideoPlayer.useEffect\"], [\n        src,\n        setupHls,\n        stabilizePlayback\n    ]);\n    // Handle alerts and bounding box display\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"VideoPlayer.useEffect\": ()=>{\n            if (alerts.length > 0) {\n            // The bounding_box property is no longer part of the Alert interface,\n            // so we'll just show the alert if it exists.\n            // The bounding box display logic is removed as per the edit hint.\n            }\n        }\n    }[\"VideoPlayer.useEffect\"], [\n        alerts\n    ]);\n    // Listen for custom alert events\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"VideoPlayer.useEffect\": ()=>{\n            const handleAlert = {\n                \"VideoPlayer.useEffect.handleAlert\": (event)=>{\n                    const alert = event.detail;\n                // The bounding_box property is no longer part of the Alert interface,\n                // so we'll just show the alert if it exists.\n                // The bounding box display logic is removed as per the edit hint.\n                }\n            }[\"VideoPlayer.useEffect.handleAlert\"];\n            window.addEventListener(\"sentinelai:alert\", handleAlert);\n            return ({\n                \"VideoPlayer.useEffect\": ()=>{\n                    window.removeEventListener(\"sentinelai:alert\", handleAlert);\n                }\n            })[\"VideoPlayer.useEffect\"];\n        }\n    }[\"VideoPlayer.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative overflow-hidden bg-black rounded-2xl shadow-md w-full\",\n        children: [\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex items-center justify-center bg-gray-900\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col items-center space-y-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"animate-pulse\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                width: \"24\",\n                                height: \"24\",\n                                viewBox: \"0 0 24 24\",\n                                fill: \"none\",\n                                stroke: \"currentColor\",\n                                strokeWidth: \"2\",\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                className: \"w-12 h-12 animate-spin text-gray-400\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    d: \"M21 12a9 9 0 1 1-6.219-8.56\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/zhenduoyang/Desktop/github repo/SentinelAI/apps/web/src/components/video-player.tsx\",\n                                    lineNumber: 295,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/zhenduoyang/Desktop/github repo/SentinelAI/apps/web/src/components/video-player.tsx\",\n                                lineNumber: 283,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/zhenduoyang/Desktop/github repo/SentinelAI/apps/web/src/components/video-player.tsx\",\n                            lineNumber: 282,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-gray-400 text-sm\",\n                            children: error ? error : \"Connecting to stream...\"\n                        }, void 0, false, {\n                            fileName: \"/Users/zhenduoyang/Desktop/github repo/SentinelAI/apps/web/src/components/video-player.tsx\",\n                            lineNumber: 298,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/zhenduoyang/Desktop/github repo/SentinelAI/apps/web/src/components/video-player.tsx\",\n                    lineNumber: 281,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/zhenduoyang/Desktop/github repo/SentinelAI/apps/web/src/components/video-player.tsx\",\n                lineNumber: 280,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n                ref: videoRef,\n                className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.cn)(\"w-full h-full\", className),\n                muted: muted,\n                playsInline: true,\n                autoPlay: autoPlay,\n                controls: controls,\n                \"aria-label\": \"Live video stream\",\n                preload: \"auto\"\n            }, void 0, false, {\n                fileName: \"/Users/zhenduoyang/Desktop/github repo/SentinelAI/apps/web/src/components/video-player.tsx\",\n                lineNumber: 305,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_5__.AnimatePresence, {}, void 0, false, {\n                fileName: \"/Users/zhenduoyang/Desktop/github repo/SentinelAI/apps/web/src/components/video-player.tsx\",\n                lineNumber: 316,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/zhenduoyang/Desktop/github repo/SentinelAI/apps/web/src/components/video-player.tsx\",\n        lineNumber: 278,\n        columnNumber: 5\n    }, this);\n}\n_s(VideoPlayer, \"5Q4yvqdWw1tDkz6+CYWSZPXxKeE=\", false, function() {\n    return [\n        _store_alerts_store__WEBPACK_IMPORTED_MODULE_3__.useAlertsStore\n    ];\n});\n_c = VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/video-player.tsx\n"));

/***/ })

});